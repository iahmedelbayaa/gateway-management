services:
  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gateway-app
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: gateway_user
      DATABASE_PASSWORD: gateway_password
      DATABASE_NAME: gateway_management
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - gateway-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gateway-postgres
    environment:
      POSTGRES_DB: gateway_management
      POSTGRES_USER: gateway_user
      POSTGRES_PASSWORD: gateway_password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U gateway_user -d gateway_management']
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - gateway-network

networks:
  gateway-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
